[{"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\index.js":"1","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\App.js":"2","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\web3-context.js":"3","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\index.js":"4","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\getWeb3.js":"5","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Home.jsx":"6","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Vote.jsx":"7","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Footer.jsx":"8","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Navigation.jsx":"9","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\CreateBallot.jsx":"10","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\EditBallot.jsx":"11","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Tally.jsx":"12","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\businessLayer\\GlobalStatesBL.js":"13","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\businessLayer\\CreateBallotBL.js":"14","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\businessLayer\\VotingBL.js":"15","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\businessLayer\\RegistrationBL.js":"16"},{"size":178,"mtime":1621497010440,"results":"17","hashOfConfig":"18"},{"size":2272,"mtime":1626310905134,"results":"19","hashOfConfig":"18"},{"size":1473,"mtime":1626311197108,"results":"20","hashOfConfig":"18"},{"size":343,"mtime":1623588604989,"results":"21","hashOfConfig":"18"},{"size":1179,"mtime":1621616491939,"results":"22","hashOfConfig":"18"},{"size":6563,"mtime":1626315186500,"results":"23","hashOfConfig":"18"},{"size":9738,"mtime":1626315185120,"results":"24","hashOfConfig":"18"},{"size":347,"mtime":1626315186504,"results":"25","hashOfConfig":"18"},{"size":3024,"mtime":1626315186525,"results":"26","hashOfConfig":"18"},{"size":12961,"mtime":1626314208410,"results":"27","hashOfConfig":"18"},{"size":5767,"mtime":1626313038999,"results":"28","hashOfConfig":"18"},{"size":2898,"mtime":1626315185130,"results":"29","hashOfConfig":"18"},{"size":898,"mtime":1625756767674,"results":"30","hashOfConfig":"18"},{"size":2682,"mtime":1626208182928,"results":"31","hashOfConfig":"18"},{"size":3674,"mtime":1626311831053,"results":"32","hashOfConfig":"18"},{"size":3903,"mtime":1626313652488,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"dg65td",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\index.js",[],["69","70"],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\App.js",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\web3-context.js",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\index.js",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\getWeb3.js",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Home.jsx",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Vote.jsx",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Footer.jsx",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Navigation.jsx",["71","72","73"],"import React, {Component} from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {Web3Context} from \"../web3-context\";\r\n\r\nclass Navigation extends Component {\r\n\r\n  static contextType = Web3Context;\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: ''\r\n      , fields: {}\r\n      , errors: {}\r\n      , ballot: true\r\n      , ballot_confirm: false\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { ballot, ballot_confirm } = this.state;\r\n    return (\r\n      <div className=\"navigation\">\r\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\r\n          <Link className=\"navbar-brand nav-logo\" to=\"/\">\r\n            DZK Vote\r\n          </Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                  data-target=\"#navbarSupportedContent\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div id=\"nav-cont\" className=\"container\">\r\n            <div className=\"collapse navbar-collapse ml-auto\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav ml-auto mb-1 mb-lg-0\">\r\n                <li\r\n                  className={`nav-item  ${this.props.location.pathname === \"/\" ? \"active\" : \"\"\r\n                    }`}\r\n                >\r\n                  <Link className=\"nav-link nav-links-right\" to=\"/\">\r\n                    Home\r\n                  <span className=\"sr-only\">(current)</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={`nav-item  ${this.props.location.pathname === \"/CreateBallot\" ? \"active\" : \"\"\r\n                    }`}\r\n                >\r\n                  <Link className=\"nav-link nav-links-right\" to=\"/CreateBallot\">\r\n                    Create Ballot\r\n                </Link>\r\n                </li>\r\n                <li\r\n                  className={`nav-item  ${this.props.location.pathname === \"/vote\" ? \"active\" : \"\"\r\n                    }`}\r\n                >\r\n                  <Link className=\"nav-link nav-links-right\" to=\"/vote\">\r\n                    Vote\r\n                </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item dropdown\">\r\n                  <a className=\"nav-link dropdown-toggle nav-links-right\" href=\"#\" id=\"navbarDropdownMenuLink\"\r\n                     role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    Account\r\n                  </a>\r\n                  <ul className=\"dropdown-menu dropdown-menu-right text-center\"\r\n                      aria-labelledby=\"navbarDropdownMenuLink\">\r\n                    <br/>\r\n                    <div className=\"address-dropdown\">\r\n                      <h5>Account Address</h5>\r\n                      <h6 className=\"mb-4\">{this.context.account.toString()}</h6>\r\n                    </div>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Navigation);","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\CreateBallot.jsx",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\EditBallot.jsx",["74","75"],"import React, {Component} from \"react\";\r\nimport {Web3Context} from \"../web3-context\";\r\nimport CreateBallotBL from \"../businessLayer/CreateBallotBL\";\r\nimport GlobalStatesBL from \"../businessLayer/GlobalStatesBL\";\r\nimport RegistrationBL from \"../businessLayer/RegistrationBL\";\r\nimport denied from \"./images/denied.png\"\r\nimport emptyimg from \"./images/noballots.jpg\"\r\n\r\n//This is available only after the admin has created the ballot\r\nclass EditBallot extends Component {\r\n    static contextType = Web3Context;\r\n    // create the businessLayer class\r\n    BL = new CreateBallotBL();\r\n    GS = new GlobalStatesBL();\r\n    regBL = new RegistrationBL(window.votingContract, window.localZkpContract);\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            txtfile: \"\"\r\n            , errorsTxtfile: \"\"\r\n            , value: \"\"\r\n            , owner: true\r\n            , finishRegistration: false\r\n\r\n        }\r\n        this.BL.getBallotStatement().then(returnValue => {\r\n            this.setState({value: returnValue});\r\n        })\r\n\r\n\r\n        this.fileInput = React.createRef();\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({owner: await this.GS.isOwner(this.context.account[0])});\r\n\r\n    }\r\n\r\n    finishRegistration() {\r\n        this.regBL.finishRegistrationPhase(this.context.account[0]).then(() => {\r\n                this.setState({finishRegistration: true})\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.handleValidation()) {\r\n\r\n\r\n            this.setState({txtfile: \"\"});\r\n\r\n\r\n        } else {\r\n            alert(\"Form has errors.\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleChange(field, e) {\r\n        let txtfile = this.state.txtfile;\r\n        txtfile = e.target.value;\r\n        this.setState({txtfile});\r\n    }\r\n\r\n    handleValidation() {\r\n\r\n        let txtfile = this.state.txtfile;\r\n        let errorsTxtfile = \"\";\r\n        let formIsValid = true;\r\n\r\n        if (!txtfile) {\r\n            errorsTxtfile = \"Please attach a text file !\";\r\n            formIsValid = false;\r\n        }\r\n        //make sure txt file is actually .txt\r\n        var textfile = /text.*/;\r\n\r\n        var file = document.querySelector('input[type=file]').files[0];\r\n\r\n        if (!file.type.match(textfile)) {\r\n            formIsValid = false;\r\n            errorsTxtfile = \"The selected file is not text file !\";\r\n        }\r\n\r\n        //read the file and add the addresses \r\n        let reader = new FileReader();\r\n        let content = \"\";\r\n        let eligible = this.eligible;\r\n        reader.onload = function (event) {\r\n            content = event.target.result;\r\n\r\n            eligible = content.split(\"\\r\\n\");  // Addresses are seperated by space \r\n            console.log(eligible);\r\n            this.BL.addEligible(this.context.account[0], eligible).then(response => alert(response));\r\n\r\n\r\n        }.bind(this)\r\n        reader.readAsText(file);\r\n        this.setState({errorsTxtfile: errorsTxtfile});\r\n\r\n        return formIsValid\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let labels = [\"Ballot Statement: \", \"First Option: \", \"Second Option: \"];\r\n\r\n        return (\r\n            <div>\r\n\r\n                {!this.state.owner &&\r\n                    <div style={{ margin: 60 }}>\r\n                        <h2 className=\"alert text-center\">Only the admin can edit a ballot</h2>\r\n                        <div className=\"illust-wrapper\">\r\n                            <img className=\"illustration center\" src={denied}></img>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n                {this.state.value && this.state.owner &&\r\n                <div className=\"text-center\">\r\n                    <h3 className=\"head text-center\" style={{margin: 60}}>\r\n                        Your current ballot statement is: </h3>\r\n                    <span className=\"spann\">\r\n                            {this.state.value.map((value, index) => {\r\n                                return <h2 className=\"head text-center\" key={index}>{labels[index] + value}</h2>\r\n                            })\r\n                            }\r\n                        </span>\r\n                    <hr></hr>\r\n                    <form onSubmit={this.contactSubmit.bind(this)} style={{margin: 100}} className=\"form\">\r\n                        <div className=\"head\" style={{fontSize: \"18px\"}}>\r\n                            <label htmlFor=\"myfile\">Please insert the additional list of voters:  &emsp;&emsp; </label>\r\n\r\n                            <input type=\"file\" id=\"myfile\" name=\"myfile\"\r\n                                   onChange={this.handleChange.bind(this, \"txtfile\")}\r\n                                   value={this.state.txtfile} ref={this.fileInput}/>\r\n                            <span style={{color: \"red\"}}>{this.state.errorsTxtfile}</span>\r\n                        </div>\r\n                        <br/> <br/>\r\n                        <input className=\"btn submit-button\" type=\"submit\" value=\"Add Voters\"/>\r\n\r\n                    </form>\r\n                    <br/>\r\n                    <button onClick={() => this.finishRegistration()}>\r\n                        Finish Registration\r\n                    </button>\r\n                </div>\r\n\r\n                }\r\n                {!this.state.value && this.state.owner &&\r\n                    <div style={{ margin: 60 }}>\r\n                        <h2 className=\"head text-center\">You didn't create any ballots yet!</h2>\r\n                        <div className=\"illust-wrapper\">\r\n                            <img className=\"illustration center\" src={emptyimg}></img>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditBallot;","C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\components\\Tally.jsx",["76"],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\businessLayer\\GlobalStatesBL.js",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\businessLayer\\CreateBallotBL.js",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\businessLayer\\VotingBL.js",[],"C:\\Users\\georg\\Desktop\\DZK_Vote\\src\\businessLayer\\RegistrationBL.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":22,"column":13,"nodeType":"83","messageId":"84","endLine":22,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":22,"column":21,"nodeType":"83","messageId":"84","endLine":22,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":64,"column":19,"nodeType":"88","endLine":64,"endColumn":174},{"ruleId":"89","severity":1,"message":"90","line":122,"column":29,"nodeType":"88","endLine":122,"endColumn":79},{"ruleId":"89","severity":1,"message":"90","line":162,"column":29,"nodeType":"88","endLine":162,"endColumn":81},{"ruleId":"81","severity":1,"message":"91","line":60,"column":15,"nodeType":"83","messageId":"84","endLine":60,"endColumn":20},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'ballot' is assigned a value but never used.","Identifier","unusedVar","'ballot_confirm' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'proof' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]