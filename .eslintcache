[{"C:\\Users\\Mayar's Laptop\\react_test\\src\\index.js":"1","C:\\Users\\Mayar's Laptop\\react_test\\src\\App.js":"2","C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\index.js":"3","C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\Footer.jsx":"4","C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\About.jsx":"5","C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\Home.jsx":"6","C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\Navigation.jsx":"7","C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\Contact.jsx":"8"},{"size":180,"mtime":1619293788769,"results":"9","hashOfConfig":"10"},{"size":596,"mtime":1619293639810,"results":"11","hashOfConfig":"10"},{"size":243,"mtime":1619293741207,"results":"12","hashOfConfig":"10"},{"size":368,"mtime":1619294373071,"results":"13","hashOfConfig":"10"},{"size":4663,"mtime":1619906654035,"results":"14","hashOfConfig":"10"},{"size":655,"mtime":1619818262474,"results":"15","hashOfConfig":"10"},{"size":1489,"mtime":1619818476083,"results":"16","hashOfConfig":"10"},{"size":3256,"mtime":1619904060470,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"dsfhdo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\Mayar's Laptop\\react_test\\src\\index.js",[],["37","38"],"C:\\Users\\Mayar's Laptop\\react_test\\src\\App.js",[],"C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\index.js",[],"C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\Footer.jsx",[],"C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\About.jsx",["39","40"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport Web3 from 'web3';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass About extends React.Component{\r\n  \r\n      //we want to talk to the blockchain by using WEB3\r\n      //Metamask is a wallet , in order to connect to the blockchain & wallet you need WEB3 \r\n      async componentWillMount() {\r\n        //start these functions when component is made\r\n       // await this.connect_web3()\r\n        //then fetch the ethereum account from metamask \r\n       // await this.fetch_account()\r\n        \r\n    \r\n      }\r\n    \r\n      async connect_web3()\r\n      {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          window.alert('Non-Ethereum browser detected. You should download Metamask')\r\n        }\r\n      }\r\n    \r\n      async fetch_account()\r\n      {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        console.log(accounts) \r\n        this.setState({account : accounts[0]})\r\n      }\r\n\r\n      handle_output = (event) => \r\n      {\r\n        event.preventDefault();\r\n        var title = document.getElementById(\"Contract-name\").value \r\n        var can1 = document.getElementById(\"Cand-1\").value\r\n        var can2 = document.getElementById(\"Cand-2\").value\r\n        var time1 = document.getElementById(\"time_Reg_Start\").value\r\n        var date1 = document.getElementById(\"date_Reg_Start\").value\r\n        var time2 = document.getElementById(\"time_Reg_End\").value\r\n        var date2 = document.getElementById(\"date_Reg_End\").value\r\n        var time3 = document.getElementById(\"time_Vote_End\").value\r\n        var date3 = document.getElementById(\"date_Vote_End\").value\r\n        if(title && can1 && can2 && time1 && time2 && time3 && date1 && date2 && date3)\r\n        {\r\n          alert(\"SUCESSSSSS\") \r\n          \r\n        }\r\n        else\r\n        {\r\n          \r\n          alert(\"Empty\")\r\n          \r\n        }\r\n\r\n      }\r\n      \r\n    \r\n      constructor(props)\r\n      {\r\n        super(props)\r\n        this.state = {\r\n          account:''\r\n          \r\n        }\r\n      }\r\n\r\n  render(){\r\n    \r\n    return (\r\n    \r\n    <div >\r\n      \r\n        <div >\r\n           \r\n          <form onSubmit = {this.handle_output.bind(this)} className= \"form\">\r\n            <br></br>\r\n            <label htmlFor=\"Contract-name\">Ballot Name</label>\r\n            <input type=\"text\" id=\"Contract-name\" name=\"Ballot Name\" placeholder=\"Enter the name of ballot\" />\r\n            <br />\r\n            <label htmlFor=\"Candidate-Name\"> Write your options </label>\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n              <input type=\"text\" id=\"Cand-1\" name=\"Cand-1\" placeholder=\"Enter the first option\" />\r\n              <input type=\"text\" id=\"Cand-2\" name=\"Cand-2\" placeholder=\"Enter the second option\" />\r\n            </div>\r\n            <br />\r\n            <label htmlFor=\"TimeStamps\">Enter the timestamp of each phase : <br /> </label>\r\n            <br /><br />\r\n            <label htmlFor=\"Reg-Time\">Registration phase start &emsp;</label> \r\n            <input id=\"date_Reg_Start\" type=\"date\" />\r\n            <input id=\"time_Reg_Start\" type=\"time\" />\r\n            \r\n            <label htmlFor=\"Reg-Time\">&emsp;Registration phase end&emsp;</label>\r\n            <input id=\"date_Reg_End\" type=\"date\" />\r\n            <input id=\"time_Reg_End\" type=\"time\" />\r\n            \r\n            <label htmlFor=\"Reg-Time\" style={{color: '#db1818'}}>&emsp;Voting phase will start automatically after registration ends</label>\r\n            <br /><br />\r\n            <label htmlFor=\"Reg-Time\">Voting phase end &emsp;</label>\r\n            <input id=\"date_Vote_End\" type=\"date\" />\r\n            <input id=\"time_Vote_End\" type=\"time\" />\r\n            \r\n            <label htmlFor=\"Tally\" style={{color: '#db1818'}}>&emsp;Tally phase will start automatically after voting phase is over </label>\r\n            <br /><br />\r\n            \r\n            <label htmlfor=\"myfile\">Select a text file containing the eligible voter's addresses: </label>\r\n            <br></br>\r\n            <input type=\"file\" id=\"myfile\" name=\"myfile\"></input>\r\n            <br></br>\r\n            <br></br>\r\n            <input type= \"submit\"/>\r\n            <Link to=\"/\" type=\"submit\" className=\"Button\" >Create Ballot</Link>\r\n            \r\n            \r\n          </form>\r\n\r\n        </div>\r\n        \r\n        \r\n       \r\n      </div>\r\n      \r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n\r\n\r\n","C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\Home.jsx",[],"C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\Navigation.jsx",[],"C:\\Users\\Mayar's Laptop\\react_test\\src\\components\\Contact.jsx",["41"],"import React from \"react\";\r\n\r\n\r\n  class Contact extends React.Component {\r\n    constructor(props){\r\n       super(props);\r\n  \r\n       this.state = {\r\n           fields: {},\r\n           errors: {}\r\n       }\r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Name\r\n        if(!fields[\"name\"]){\r\n           formIsValid = false;\r\n           errors[\"name\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n           if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"name\"] = \"Only letters\";\r\n           }        \r\n        }\r\n   \r\n        //Email\r\n        if(!fields[\"email\"]){\r\n           formIsValid = false;\r\n           errors[\"email\"] = \"Cannot be empty\";\r\n        }\r\n  \r\n        if(typeof fields[\"email\"] !== \"undefined\"){\r\n           let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n           let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n\r\n           if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n              formIsValid = false;\r\n              errors[\"email\"] = \"Email is not valid\";\r\n            }\r\n       }  \r\n\r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n    \r\n   contactSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(this.handleValidation()){\r\n           alert(\"Form submitted\");\r\n        }else{\r\n           alert(\"Form has errors.\")\r\n        }\r\n  \r\n    }\r\n\r\n    handleChange(field, e){         \r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>           \r\n               <form name=\"contactform\" className=\"contactform\" onSubmit= {this.contactSubmit.bind(this)}>\r\n                    <div className=\"col-md-6\">\r\n                      <fieldset>\r\n                           <input ref=\"name\" type=\"text\" size=\"30\" placeholder=\"Name\" onChange={this.handleChange.bind(this, \"name\")} value={this.state.fields[\"name\"]}/>\r\n                           <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\r\n                          <br/>\r\n                         <input refs=\"email\" type=\"text\" size=\"30\" placeholder=\"Email\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.fields[\"email\"]}/>\r\n                         <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\r\n                         <br/>\r\n                         <input refs=\"phone\" type=\"text\" size=\"30\" placeholder=\"Phone\" onChange={this.handleChange.bind(this, \"phone\")} value={this.state.fields[\"phone\"]}/>\r\n                         <br/>\r\n                         <input refs=\"address\" type=\"text\" size=\"30\" placeholder=\"Address\" onChange={this.handleChange.bind(this, \"address\")} value={this.state.fields[\"address\"]}/>\r\n                         <br/>\r\n                         <input type =\"submit\" /> \r\n                     </fieldset>\r\n                  </div>\r\n      \r\n              </form>\r\n            </div>\r\n      )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Contact;",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":16},{"ruleId":"46","severity":1,"message":"50","line":4,"column":16,"nodeType":"48","messageId":"49","endLine":4,"endColumn":26},{"ruleId":"51","severity":1,"message":"52","line":42,"column":91,"nodeType":"53","messageId":"54","endLine":42,"endColumn":93},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]